<rp:ThemeDictionaryBase x:Class="RoslynPad.DockThemeDictionary"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:dock="https://github.com/Dirkster99/AvalonDock"
      xmlns:rp="clr-namespace:RoslynPad"
      mc:Ignorable="d">

    <Style x:Key="DocumentPaneControlTabStyle" TargetType="TabItem">
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        <Setter Property="ToolTip" Value="{Binding ToolTip}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static rp:ThemeDictionary.TabInactiveForeground}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static rp:ThemeDictionary.TabInactiveBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static rp:ThemeDictionary.TabBorder}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border
							x:Name="Bd"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="1,1,1,0" />
                        <Rectangle
                            Name="Top"
                            Height="1"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Stretch"
                            Fill="Transparent" />
                        <ContentPresenter
							x:Name="Content"
							HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
							VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
							ContentSource="Header"
							RecognizesAccessKey="True"
                            Margin="5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static rp:ThemeDictionary.TabActiveForeground}}" />
                            <Setter TargetName="Top" Property="Fill" Value="{DynamicResource {x:Static rp:ThemeDictionary.TabActiveBorderTop}}" />
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static rp:ThemeDictionary.TabActiveBackground}}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static rp:ThemeDictionary.TabActiveBorder}}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsSelected" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static rp:ThemeDictionary.TabHoverForeground}}" />
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static rp:ThemeDictionary.TabHoverBackground}}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static rp:ThemeDictionary.TabHoverBorder}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</rp:ThemeDictionaryBase>
